services:
    postgres:
        image: postgres:latest
        container_name: pg-dan-user-db
        restart: always
        environment:
            POSTGRES_DB: usuarios_tp_dan
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: diego19111975
        ports:
            - '5433:5432' # Cambiado el puerto expuesto en el host
        networks:
            - usuarios-net
        volumes:
            - pgdata:/var/lib/postgresql/data # Monta el volumen para persistir los datos

    pgadmin:
        image: dpage/pgadmin4
        container_name: pgadmin-user-container
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@example.com
            PGADMIN_DEFAULT_PASSWORD: admin
        ports:
            - '5050:80' # Puerto expuesto para pgAdmin 4
        depends_on:
            - postgres
        networks:
            - usuarios-net

    ms-usuarios-svc:
        image: ms-usuarios-svc:latest
        build:
            context: .
            dockerfile: Dockerfile
        environment:
            PORT: 8080
            EUREKA_INSTANCE_NON_SECURE_PORT: 8080
            EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE: http://eureka-server:8761/eureka/
            PG_DATABASE: usuarios_tp_dan
            PG_USER: postgres
            PG_PASSWORD: diego19111975
            PG_HOST: pg-dan-user-db
            PG_PORT: 5432
            JWT_PRIVATE_KEY: asDkFx4%&/AsDf!!!%dDA
        ports:
            - '8080' # Puerto expuesto para tu servicio de usuarios, sin mapear al host para permitir replicas
        depends_on:
            - postgres
        networks:
            - backend-net
            - usuarios-net
        deploy:
            replicas: 3
            restart_policy:
                condition: on-failure

    # nginx:
    #     image: nginx:latest
    #     container_name: nginx
    #     ports:
    #         - '80:80'
    #     volumes:
    #         - ./nginx.conf:/etc/nginx/nginx.conf:ro # Monta el archivo de configuraci√≥n nginx.conf
    #     networks:
    #         - backend-net
    #         - usuarios-net

networks:
    backend-net:
        external: true
    usuarios-net:
        driver: bridge

volumes:
    pgdata:
